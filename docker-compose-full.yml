# documentation: https://docs.lmnr.ai
# slogan: The single open-source platform to trace, evaluate, and analyze AI agents.
# category: ai
# tags: ai, observability, tracing, evaluation, analytics, llm, agents, monitoring, opentelemetry
# logo: svgs/laminar.svg
# port: 5667

services:
  rabbitmq:
    image: rabbitmq:latest
    environment:
      - RABBITMQ_DEFAULT_USER=${SERVICE_USER_RABBITMQ}
      - RABBITMQ_DEFAULT_PASS=${SERVICE_PASSWORD_RABBITMQ}
    healthcheck:
      test: rabbitmq-diagnostics -q check_running && rabbitmq-diagnostics -q check_local_alarms
      interval: 10s
      timeout: 10s
      retries: 3

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    volumes:
      - clickhouse-data:/var/lib/clickhouse
      - clickhouse-logs:/var/log/clickhouse-server
      - type: bind
        source: ./clickhouse-profiles-config.xml
        target: /etc/clickhouse-server/users.d/lmnr.xml
    environment:
      - CLICKHOUSE_USER=${SERVICE_USER_CLICKHOUSE}
      - CLICKHOUSE_PASSWORD=${SERVICE_PASSWORD_CLICKHOUSE}
    cap_add:
      - SYS_NICE
      - NET_ADMIN
      - IPC_LOCK
    ulimits:
      nofile:
        soft: 262144
        hard: 262144

  postgres:
    image: postgres:16-alpine
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${SERVICE_USER_POSTGRES}
      - POSTGRES_PASSWORD=${SERVICE_PASSWORD_POSTGRES}
      - POSTGRES_DB=${POSTGRES_DB:-lmnr}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -h localhost -U $${POSTGRES_USER} -d $${POSTGRES_DB}",
        ]
      interval: 5s
      timeout: 20s
      retries: 10

  query-engine:
    image: ghcr.io/lmnr-ai/query-engine:latest
    environment:
      - PORT=8903
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:8903/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 3

  app-server:
    image: ghcr.io/lmnr-ai/app-server:latest
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      clickhouse:
        condition: service_started
      query-engine:
        condition: service_healthy
    environment:
      - PORT=8000
      - GRPC_PORT=8001
      - DATABASE_URL=postgres://${SERVICE_USER_POSTGRES}:${SERVICE_PASSWORD_POSTGRES}@postgres:5432/${POSTGRES_DB:-lmnr}
      - RABBITMQ_URL=amqp://${SERVICE_USER_RABBITMQ}:${SERVICE_PASSWORD_RABBITMQ}@rabbitmq:5672/%2f
      - CLICKHOUSE_URL=http://clickhouse:8123
      - CLICKHOUSE_USER=${SERVICE_USER_CLICKHOUSE}
      - CLICKHOUSE_PASSWORD=${SERVICE_PASSWORD_CLICKHOUSE}
      - CLICKHOUSE_RO_USER=${SERVICE_USER_CLICKHOUSE-RO}
      - CLICKHOUSE_RO_PASSWORD=${SERVICE_PASSWORD_CLICKHOUSE-RO}
      - SHARED_SECRET_TOKEN=${SERVICE_PASSWORD_64_SHAREDSECRET}
      - ENVIRONMENT=FULL
      - AEAD_SECRET_KEY=${SERVICE_BASE64_64_AEAD}
      - QUERY_ENGINE_URL=http://query-engine:8903

  frontend:
    image: ghcr.io/lmnr-ai/frontend:latest
    depends_on:
      postgres:
        condition: service_healthy
      clickhouse:
        condition: service_started
      app-server:
        condition: service_started
    environment:
      - SERVICE_URL_FRONTEND_5667
      - PORT=5667
      - BACKEND_URL=http://app-server:8000
      - SHARED_SECRET_TOKEN=${SERVICE_PASSWORD_64_SHAREDSECRET}
      - DATABASE_URL=postgres://${SERVICE_USER_POSTGRES}:${SERVICE_PASSWORD_POSTGRES}@postgres:5432/${POSTGRES_DB:-lmnr}
      - NEXTAUTH_URL=${SERVICE_FQDN_FRONTEND}
      - NEXTAUTH_SECRET=${SERVICE_PASSWORD_64_NEXTAUTH}
      - NEXT_PUBLIC_URL=${SERVICE_FQDN_FRONTEND}
      - ENVIRONMENT=FULL
      - CLICKHOUSE_URL=http://clickhouse:8123
      - CLICKHOUSE_USER=${SERVICE_USER_CLICKHOUSE}
      - CLICKHOUSE_PASSWORD=${SERVICE_PASSWORD_CLICKHOUSE}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AEAD_SECRET_KEY=${SERVICE_BASE64_64_AEAD}

volumes:
  clickhouse-data:
  clickhouse-logs:
  postgres-data:
